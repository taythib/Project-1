using
system
using
parse
using
tokens
using
tree
public
class
spp
public
static
int
main
(string args)
//
create
scanner
that
reads
from
standard
input
scanner
scanner
=
new
scanner
(console.in)
if
  equals
(args.length > 1 (args.length == 1 && ! args 0 . equals))
console.error.writeline
("Usage: mono SPP [-d]")
return
1
//
if
command
line
option
-
d
is
provided
debug
the
scanner.
if
  equals
(args.length == 1 && args 0 . equals)
//
console.write
("Scheme 4101> ")
token
tok
=
scanner.getnexttoken
()
while
(tok != null)
tokentype
tt
=
tok.gettype
()
console.write
(tt)
if
(tt == tokentype.int)
console.writeline
(", intVal = " + tok.getintval ())
else
if
(tt == tokentype.string)
console.writeline
(", stringVal = " + tok.getstringval ())
else
if
(tt == tokentype.ident)
console.writeline
(", name = " + tok.getname ())
else
console.writeline
()
//
console.write
("Scheme 4101> ")
tok
=
scanner.getnexttoken
()
return
0
//
create
parser
parser
parser
=
new
parser
(scanner)
node
root
//
parse
and
pretty-print
each
input
expression
root
=
parser.parseexp
()
while
(root != null)
root.print
(0)
root
=
parser.parseexp
()
return
0
